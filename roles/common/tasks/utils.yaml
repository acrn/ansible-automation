---
- file: path=~/dotfiles state=directory mode=0755
  tags: utils
- file: path=~/bin state=directory mode=0755
  tags: utils

- name: render dotfile templates
  tags: [utils]
  template: src="{{item}}" dest="~/dotfiles/{{item}}"
  with_items: "{{dotfiles}}"

- name: list links in ~
  changed_when: false
  tags: [utils]
  command: find ~ -maxdepth 1 -type l -print
  register: dotlinks
  check_mode: no

  # ansible refuses to overwrite file with link, maybe there's a -f option
- name: remove non links
  tags: [utils]
  file: dest=~/.{{item}} state=absent
  when: item not in dotlinks.stdout
  with_items: "{{dotfiles}}"

- name: link files to ~
  file: src=~/dotfiles/{{item}} dest=~/.{{item}} state=link
  tags: [utils]
  with_items: "{{dotfiles}}"

- name: Fetch git completion script
  tags: [utils]
  get_url:
    url: "https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh"
    dest: ~/dotfiles

- name: Make zshrc the default shell
  tags: [utils]
  lineinfile:
    dest: /etc/default/useradd
    regexp: ^SHELL=
    line: SHELL=/usr/bin/zsh
  become: yes

# packages
- name: install arch utility packages
  tags: utils
  pacman: name={{item}} state=present
  become: yes
  with_items:
    - docker
    - htop
    - nmap
    - tmux
    - xsel
  when: ansible_distribution.startswith('Arch Linux')

- name: install fedora utility packages
  tags: utils
  dnf: name={{item}} state=present
  become: yes
  with_items:
    - ansible
    - docker
    - htop
    - mc
    - nmap
    - npm
    - pwsafe
    - tmux
    - xsel
  when: ansible_distribution == "Fedora"

- name: install ubuntu utility packages
  tags: utils
  apt: name={{item}} state=present
  become: yes
  with_items:
    #- docker.io  #TODO: only skip on chromebooks
    - htop
    - mc
    - nmap
    - tmux
    - xsel
    - python3
  when: ansible_distribution == "Ubuntu"
