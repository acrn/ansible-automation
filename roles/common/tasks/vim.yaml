---
- name: Create directories
  file:
    path: "{{item}}"
    state: directory
    mode: '0755'
  tags: vim
  with_items:
    - ~/dotfiles/vim/plugin
    - ~/dotfiles/vim/tmp
    - ~/dotfiles/vim/colors

- name: Create pack dirs
  file:
    path: "{{'~/dotfiles/vim/pack/{0}/{1}'.format(
              item.value.get('pack', 'base'),
              item.value.get('phase', 'start'))}}"
    state: directory
  with_dict: "{{vim_plugins}}"

- name: Link .vim directory
  file:
    src: ~/dotfiles/vim
    dest: ~/.vim
    state: link
  tags: vim

- name: install vim
  tags: vim
  package:
    name: vim
    state: present
  become: yes

- name: Check if fzf.vim is present
  tags: vim
  stat:
    path: ~/.fzf/fzf.vim
    get_attributes: no
    get_checksum: no
    get_md5: no
    get_mime: no
  register: stat_fzf_vim

- name: Link fzf.vim to plugin
  tags: vim
  file:
    src: "{{stat_fzf_vim.stat.path}}"
    dest: "~/dotfiles/vim/plugin/fzf.vim"
    state: link
  when: stat_fzf_vim.stat.exists

- name: Check if fzf.vim is present
  tags: vim
  stat:
    path: ~/.fzf/fzf.vim
    get_attributes: no
    get_checksum: no
    get_md5: no
    get_mime: no
  register: stat_fzf_vim

- name: Link fzf.vim to plugin
  tags: vim
  file:
    src: "{{stat_fzf_vim.stat.path}}"
    dest: "~/dotfiles/vim/plugin/fzf.vim"
    state: link
  when: stat_fzf_vim.stat.exists

- name: vimrc
  tags:
    - vim
    - vimrc
  template: src="vimrc" dest="~/dotfiles/vim/vimrc"

- name: gvimrc
  tags: vim
  template: src="gvimrc" dest="~/dotfiles/vim/gvimrc"

- name: Install colorschemes
  tags: vim
  get_url:
    url: "{{ item }}"
    dest: ~/dotfiles/vim/colors
  with_items: "{{ vim_colorschemes }}"

- name: Install plugin dependencies
  become: yes
  tags: vim
  package:
    name: "{{item}}"
    state: present
  with_items: "{{vim_plugins.values()
                  |rejectattr('package_deps', 'undefined')
                  |map(attribute='package_deps')
                  |list}}"

- name: Update pack plugins
  git:
    repo: "{{item.value.repo}}"
    dest: "{{'~/dotfiles/vim/pack/{0}/{1}/{2}'.format(
              item.value.get('pack', 'base'),
              item.value.get('phase', 'start'),
              item.key)}}"
  tags: vim
  register: mupperiet
  with_dict: "{{vim_plugins}}"

- name: Exec plugin post commands
  tags: vim
  command: "{{item.on_changed}}"
  args:
    chdir: "~/dotfiles/vim/pack"
  with_items: "{{mupperiet.results
                  |selectattr('changed', 'equalto', true)
                  |map(attribute='item')
                  |map(attribute='value')
                  |rejectattr('on_changed', 'undefined')
                  |list}}"
